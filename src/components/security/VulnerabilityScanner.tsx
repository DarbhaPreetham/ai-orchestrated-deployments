
import React from 'react';
import { Scan, AlertTriangle, Shield, Bug, Clock } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';

const vulnerabilities = [
  {
    id: 'CVE-2023-4567',
    severity: 'high',
    component: 'express',
    version: '4.17.1',
    description: 'Remote code execution vulnerability',
    status: 'open',
    discovered: '2 days ago'
  },
  {
    id: 'CVE-2023-3456',
    severity: 'medium',
    component: 'lodash',
    version: '4.17.19',
    description: 'Prototype pollution vulnerability',
    status: 'patching',
    discovered: '5 days ago'
  },
  {
    id: 'CVE-2023-2345',
    severity: 'low',
    component: 'axios',
    version: '0.21.1',
    description: 'Information disclosure vulnerability',
    status: 'resolved',
    discovered: '1 week ago'
  }
];

const scanResults = {
  lastScan: '15 minutes ago',
  nextScan: 'in 45 minutes',
  totalScanned: 247,
  vulnerabilities: {
    critical: 0,
    high: 3,
    medium: 12,
    low: 8
  }
};

export const VulnerabilityScanner = () => {
  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critical': return 'text-red-700 bg-red-100 border-red-200';
      case 'high': return 'text-orange-700 bg-orange-100 border-orange-200';
      case 'medium': return 'text-yellow-700 bg-yellow-100 border-yellow-200';
      case 'low': return 'text-blue-700 bg-blue-100 border-blue-200';
      default: return 'text-gray-700 bg-gray-100 border-gray-200';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'resolved': return 'text-green-600';
      case 'patching': return 'text-blue-600';
      case 'open': return 'text-red-600';
      default: return 'text-muted-foreground';
    }
  };

  return (
    <div className="bg-card rounded-lg border border-border p-6">
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center space-x-2">
          <Scan className="h-5 w-5 text-primary" />
          <h3 className="text-lg font-semibold text-foreground">Vulnerability Scanner</h3>
        </div>
        <Button size="sm">
          <Scan className="h-4 w-4 mr-2" />
          Scan Now
        </Button>
      </div>
      
      {/* Scan Status */}
      <div className="mb-6 p-4 rounded-lg bg-accent/20">
        <div className="flex items-center justify-between mb-2">
          <span className="text-sm font-medium text-foreground">Scan Status</span>
          <span className="text-xs text-muted-foreground">Last: {scanResults.lastScan}</span>
        </div>
        <div className="grid grid-cols-4 gap-2 mb-3">
          <div className="text-center">
            <div className="text-lg font-bold text-red-600">{scanResults.vulnerabilities.critical}</div>
            <div className="text-xs text-muted-foreground">Critical</div>
          </div>
          <div className="text-center">
            <div className="text-lg font-bold text-orange-600">{scanResults.vulnerabilities.high}</div>
            <div className="text-xs text-muted-foreground">High</div>
          </div>
          <div className="text-center">
            <div className="text-lg font-bold text-yellow-600">{scanResults.vulnerabilities.medium}</div>
            <div className="text-xs text-muted-foreground">Medium</div>
          </div>
          <div className="text-center">
            <div className="text-lg font-bold text-blue-600">{scanResults.vulnerabilities.low}</div>
            <div className="text-xs text-muted-foreground">Low</div>
          </div>
        </div>
        <div className="text-xs text-muted-foreground">
          Next scan: {scanResults.nextScan} â€¢ {scanResults.totalScanned} components scanned
        </div>
      </div>

      {/* Vulnerabilities List */}
      <div>
        <h4 className="text-sm font-medium text-foreground mb-3">Recent Vulnerabilities</h4>
        <div className="space-y-3">
          {vulnerabilities.map((vuln) => (
            <div key={vuln.id} className="p-3 rounded-lg border border-border">
              <div className="flex items-start justify-between mb-2">
                <div className="flex items-center space-x-2">
                  <Bug className="h-4 w-4 text-red-500" />
                  <span className="font-mono text-sm text-foreground">{vuln.id}</span>
                  <span className={`px-2 py-1 rounded text-xs font-medium border ${getSeverityColor(vuln.severity)}`}>
                    {vuln.severity}
                  </span>
                </div>
                <span className={`text-xs font-medium ${getStatusColor(vuln.status)}`}>
                  {vuln.status}
                </span>
              </div>
              
              <div className="text-sm text-foreground mb-1">{vuln.description}</div>
              <div className="flex items-center justify-between text-xs text-muted-foreground">
                <span>{vuln.component}@{vuln.version}</span>
                <div className="flex items-center space-x-1">
                  <Clock className="h-3 w-3" />
                  <span>{vuln.discovered}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};
